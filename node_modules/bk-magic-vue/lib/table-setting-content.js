(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('bk-magic-vue/lib/locale')) :
  typeof define === 'function' && define.amd ? define(['exports', 'bk-magic-vue/lib/locale'], factory) :
  (global = global || self, factory(global.library = {}, global.locale));
}(this, function (exports, locale) { 'use strict';

  locale = locale && locale.hasOwnProperty('default') ? locale['default'] : locale;

  function _toConsumableArray(arr) {
    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
  }

  function _arrayWithoutHoles(arr) {
    if (Array.isArray(arr)) return _arrayLikeToArray(arr);
  }

  function _iterableToArray(iter) {
    if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter);
  }

  function _unsupportedIterableToArray(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return _arrayLikeToArray(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
  }

  function _arrayLikeToArray(arr, len) {
    if (len == null || len > arr.length) len = arr.length;

    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];

    return arr2;
  }

  function _nonIterableSpread() {
    throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }

  var checkboxSeed = 0;
  var groupSeed = 0;
  function getCheckboxName() {
    return "bk-checkbox_".concat(checkboxSeed++);
  }
  function getGroupName() {
    return "bk-checkbox-group_".concat(groupSeed++);
  }

  var script = {
    name: 'bk-checkbox-group',
    props: {
      value: {
        type: Array,
        default: function _default() {
          return [];
        }
      },
      name: {
        type: [String, Number],
        default: function _default() {
          return getGroupName();
        }
      }
    },
    data: function data() {
      return {
        checkboxItems: [],
        isCheckboxGroup: true,
        localValue: _toConsumableArray(this.value)
      };
    },
    watch: {
      value: function value(_value) {
        this.localValue = _toConsumableArray(_value);
      }
    },
    created: function created() {
      var _this = this;
      this.$on('checkbox-item-add', function (item) {
        if (item) {
          _this.checkboxItems.push(item);
        }
        return false;
      });
    },
    methods: {
      handleChange: function handleChange(checked, value) {
        var oldValue = _toConsumableArray(this.localValue);
        var localValue = [];
        this.checkboxItems.forEach(function (checkbox) {
          var params = checkbox.getValue();
          if (params.isChecked) {
            localValue.push(params.value);
          }
        });
        this.localValue = localValue;
        this.$emit('input', this.localValue);
        this.$emit('change', this.localValue, oldValue);
      }
    }
  };

  function normalizeComponent(template, style, script, scopeId, isFunctionalTemplate, moduleIdentifier
  , shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {
    if (typeof shadowMode !== 'boolean') {
      createInjectorSSR = createInjector;
      createInjector = shadowMode;
      shadowMode = false;
    }
    var options = typeof script === 'function' ? script.options : script;
    if (template && template.render) {
      options.render = template.render;
      options.staticRenderFns = template.staticRenderFns;
      options._compiled = true;
      if (isFunctionalTemplate) {
        options.functional = true;
      }
    }
    if (scopeId) {
      options._scopeId = scopeId;
    }
    var hook;
    if (moduleIdentifier) {
      hook = function hook(context) {
        context = context ||
        this.$vnode && this.$vnode.ssrContext ||
        this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext;
        if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
          context = __VUE_SSR_CONTEXT__;
        }
        if (style) {
          style.call(this, createInjectorSSR(context));
        }
        if (context && context._registeredComponents) {
          context._registeredComponents.add(moduleIdentifier);
        }
      };
      options._ssrRegister = hook;
    } else if (style) {
      hook = shadowMode ? function () {
        style.call(this, createInjectorShadow(this.$root.$options.shadowRoot));
      } : function (context) {
        style.call(this, createInjector(context));
      };
    }
    if (hook) {
      if (options.functional) {
        var originalRender = options.render;
        options.render = function renderWithStyleInjection(h, context) {
          hook.call(context);
          return originalRender(h, context);
        };
      } else {
        var existing = options.beforeCreate;
        options.beforeCreate = existing ? [].concat(existing, hook) : [hook];
      }
    }
    return script;
  }
  var normalizeComponent_1 = normalizeComponent;

  /* script */
  var __vue_script__ = script;
  /* template */

  var __vue_render__ = function __vue_render__() {
    var _vm = this;

    var _h = _vm.$createElement;

    var _c = _vm._self._c || _h;

    return _c('div', {
      staticClass: "bk-form-control",
      attrs: {
        "name": _vm.name
      }
    }, [_vm._t("default")], 2);
  };

  var __vue_staticRenderFns__ = [];
  /* style */

  var __vue_inject_styles__ = undefined;
  /* scoped */

  var __vue_scope_id__ = undefined;
  /* module identifier */

  var __vue_module_identifier__ = undefined;
  /* functional template */

  var __vue_is_functional_template__ = false;
  /* style inject */

  /* style inject SSR */

  /* style inject shadow dom */

  var __vue_component__ = normalizeComponent_1({
    render: __vue_render__,
    staticRenderFns: __vue_staticRenderFns__
  }, __vue_inject_styles__, __vue_script__, __vue_scope_id__, __vue_is_functional_template__, __vue_module_identifier__, false, undefined, undefined, undefined);

  var _defined = function (it) {
    if (it == undefined) throw TypeError("Can't call method on  " + it);
    return it;
  };

  var _toObject = function (it) {
    return Object(_defined(it));
  };

  var hasOwnProperty = {}.hasOwnProperty;
  var _has = function (it, key) {
    return hasOwnProperty.call(it, key);
  };

  var toString = {}.toString;
  var _cof = function (it) {
    return toString.call(it).slice(8, -1);
  };

  var _iobject = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
    return _cof(it) == 'String' ? it.split('') : Object(it);
  };

  var _toIobject = function (it) {
    return _iobject(_defined(it));
  };

  var ceil = Math.ceil;
  var floor = Math.floor;
  var _toInteger = function (it) {
    return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
  };

  var min = Math.min;
  var _toLength = function (it) {
    return it > 0 ? min(_toInteger(it), 0x1fffffffffffff) : 0;
  };

  var max = Math.max;
  var min$1 = Math.min;
  var _toAbsoluteIndex = function (index, length) {
    index = _toInteger(index);
    return index < 0 ? max(index + length, 0) : min$1(index, length);
  };

  var _arrayIncludes = function (IS_INCLUDES) {
    return function ($this, el, fromIndex) {
      var O = _toIobject($this);
      var length = _toLength(O.length);
      var index = _toAbsoluteIndex(fromIndex, length);
      var value;
      if (IS_INCLUDES && el != el) while (length > index) {
        value = O[index++];
        if (value != value) return true;
      } else for (;length > index; index++) if (IS_INCLUDES || index in O) {
        if (O[index] === el) return IS_INCLUDES || index || 0;
      } return !IS_INCLUDES && -1;
    };
  };

  function createCommonjsModule(fn, module) {
  	return module = { exports: {} }, fn(module, module.exports), module.exports;
  }

  var _core = createCommonjsModule(function (module) {
  var core = module.exports = { version: '2.6.11' };
  if (typeof __e == 'number') __e = core;
  });
  var _core_1 = _core.version;

  var _global = createCommonjsModule(function (module) {
  var global = module.exports = typeof window != 'undefined' && window.Math == Math
    ? window : typeof self != 'undefined' && self.Math == Math ? self
    : Function('return this')();
  if (typeof __g == 'number') __g = global;
  });

  var _shared = createCommonjsModule(function (module) {
  var SHARED = '__core-js_shared__';
  var store = _global[SHARED] || (_global[SHARED] = {});
  (module.exports = function (key, value) {
    return store[key] || (store[key] = value !== undefined ? value : {});
  })('versions', []).push({
    version: _core.version,
    mode:  'pure' ,
    copyright: 'Â© 2019 Denis Pushkarev (zloirock.ru)'
  });
  });

  var id = 0;
  var px = Math.random();
  var _uid = function (key) {
    return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
  };

  var shared = _shared('keys');
  var _sharedKey = function (key) {
    return shared[key] || (shared[key] = _uid(key));
  };

  var arrayIndexOf = _arrayIncludes(false);
  var IE_PROTO = _sharedKey('IE_PROTO');
  var _objectKeysInternal = function (object, names) {
    var O = _toIobject(object);
    var i = 0;
    var result = [];
    var key;
    for (key in O) if (key != IE_PROTO) _has(O, key) && result.push(key);
    while (names.length > i) if (_has(O, key = names[i++])) {
      ~arrayIndexOf(result, key) || result.push(key);
    }
    return result;
  };

  var _enumBugKeys = (
    'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
  ).split(',');

  var _objectKeys = Object.keys || function keys(O) {
    return _objectKeysInternal(O, _enumBugKeys);
  };

  var _aFunction = function (it) {
    if (typeof it != 'function') throw TypeError(it + ' is not a function!');
    return it;
  };

  var _ctx = function (fn, that, length) {
    _aFunction(fn);
    if (that === undefined) return fn;
    switch (length) {
      case 1: return function (a) {
        return fn.call(that, a);
      };
      case 2: return function (a, b) {
        return fn.call(that, a, b);
      };
      case 3: return function (a, b, c) {
        return fn.call(that, a, b, c);
      };
    }
    return function () {
      return fn.apply(that, arguments);
    };
  };

  var _isObject = function (it) {
    return typeof it === 'object' ? it !== null : typeof it === 'function';
  };

  var _anObject = function (it) {
    if (!_isObject(it)) throw TypeError(it + ' is not an object!');
    return it;
  };

  var _fails = function (exec) {
    try {
      return !!exec();
    } catch (e) {
      return true;
    }
  };

  var _descriptors = !_fails(function () {
    return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;
  });

  var document = _global.document;
  var is = _isObject(document) && _isObject(document.createElement);
  var _domCreate = function (it) {
    return is ? document.createElement(it) : {};
  };

  var _ie8DomDefine = !_descriptors && !_fails(function () {
    return Object.defineProperty(_domCreate('div'), 'a', { get: function () { return 7; } }).a != 7;
  });

  var _toPrimitive = function (it, S) {
    if (!_isObject(it)) return it;
    var fn, val;
    if (S && typeof (fn = it.toString) == 'function' && !_isObject(val = fn.call(it))) return val;
    if (typeof (fn = it.valueOf) == 'function' && !_isObject(val = fn.call(it))) return val;
    if (!S && typeof (fn = it.toString) == 'function' && !_isObject(val = fn.call(it))) return val;
    throw TypeError("Can't convert object to primitive value");
  };

  var dP = Object.defineProperty;
  var f = _descriptors ? Object.defineProperty : function defineProperty(O, P, Attributes) {
    _anObject(O);
    P = _toPrimitive(P, true);
    _anObject(Attributes);
    if (_ie8DomDefine) try {
      return dP(O, P, Attributes);
    } catch (e) {  }
    if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
    if ('value' in Attributes) O[P] = Attributes.value;
    return O;
  };
  var _objectDp = {
  	f: f
  };

  var _propertyDesc = function (bitmap, value) {
    return {
      enumerable: !(bitmap & 1),
      configurable: !(bitmap & 2),
      writable: !(bitmap & 4),
      value: value
    };
  };

  var _hide = _descriptors ? function (object, key, value) {
    return _objectDp.f(object, key, _propertyDesc(1, value));
  } : function (object, key, value) {
    object[key] = value;
    return object;
  };

  var PROTOTYPE = 'prototype';
  var $export = function (type, name, source) {
    var IS_FORCED = type & $export.F;
    var IS_GLOBAL = type & $export.G;
    var IS_STATIC = type & $export.S;
    var IS_PROTO = type & $export.P;
    var IS_BIND = type & $export.B;
    var IS_WRAP = type & $export.W;
    var exports = IS_GLOBAL ? _core : _core[name] || (_core[name] = {});
    var expProto = exports[PROTOTYPE];
    var target = IS_GLOBAL ? _global : IS_STATIC ? _global[name] : (_global[name] || {})[PROTOTYPE];
    var key, own, out;
    if (IS_GLOBAL) source = name;
    for (key in source) {
      own = !IS_FORCED && target && target[key] !== undefined;
      if (own && _has(exports, key)) continue;
      out = own ? target[key] : source[key];
      exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]
      : IS_BIND && own ? _ctx(out, _global)
      : IS_WRAP && target[key] == out ? (function (C) {
        var F = function (a, b, c) {
          if (this instanceof C) {
            switch (arguments.length) {
              case 0: return new C();
              case 1: return new C(a);
              case 2: return new C(a, b);
            } return new C(a, b, c);
          } return C.apply(this, arguments);
        };
        F[PROTOTYPE] = C[PROTOTYPE];
        return F;
      })(out) : IS_PROTO && typeof out == 'function' ? _ctx(Function.call, out) : out;
      if (IS_PROTO) {
        (exports.virtual || (exports.virtual = {}))[key] = out;
        if (type & $export.R && expProto && !expProto[key]) _hide(expProto, key, out);
      }
    }
  };
  $export.F = 1;
  $export.G = 2;
  $export.S = 4;
  $export.P = 8;
  $export.B = 16;
  $export.W = 32;
  $export.U = 64;
  $export.R = 128;
  var _export = $export;

  var _objectSap = function (KEY, exec) {
    var fn = (_core.Object || {})[KEY] || Object[KEY];
    var exp = {};
    exp[KEY] = exec(fn);
    _export(_export.S + _export.F * _fails(function () { fn(1); }), 'Object', exp);
  };

  _objectSap('keys', function () {
    return function keys(it) {
      return _objectKeys(_toObject(it));
    };
  });

  var keys = _core.Object.keys;

  var keys$1 = keys;

  function setInstaller (component, afterInstall) {
    component.install = function (Vue) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var props = component.props || {};
      keys$1(options).forEach(function (key) {
        if (props.hasOwnProperty(key)) {
          if (typeof props[key] === 'function' || props[key] instanceof Array) {
            props[key] = {
              type: props[key],
              default: options[key]
            };
          } else {
            props[key].default = options[key];
          }
        }
      });
      component.name = options.namespace ? component.name.replace('bk', options.namespace) : component.name;
      Vue.component(component.name, component);
      typeof afterInstall === 'function' && afterInstall(Vue, options);
    };
  }

  setInstaller(__vue_component__);

  var emitter = {
    methods: {
      dispatch: function dispatch(componentName, eventName, params) {
        var parent = this.$parent || this.$root;
        var name = parent.$options.name;
        while (parent && (!name || name !== componentName)) {
          parent = parent.$parent;
          if (parent) {
            name = parent.$options.name;
          }
        }
        if (parent) {
          parent.$emit.apply(parent, [eventName].concat(params));
        }
      }
    }
  };

  var script$1 = {
    name: 'bk-checkbox',
    mixins: [emitter],
    props: {
      value: {
        type: [String, Number, Boolean],
        default: undefined
      },
      checked: {
        type: Boolean,
        default: undefined
      },
      trueValue: {
        type: [String, Number, Boolean],
        default: true
      },
      falseValue: {
        type: [String, Number, Boolean],
        default: false
      },
      label: {
        type: [String, Number]
      },
      name: {
        type: String,
        default: function _default() {
          return getCheckboxName();
        }
      },
      disabled: Boolean,
      indeterminate: Boolean,
      extCls: {
        type: String,
        default: ''
      }
    },
    data: function data() {
      return {
        parent: null,
        localValue: undefined
      };
    },
    computed: {
      selected: function selected() {
        return this.localValue === this.localTrueValue;
      },
      parentValue: function parentValue() {
        return this.parent ? this.parent.localValue : null;
      },
      localTrueValue: function localTrueValue() {
        var localValue;
        if (this.parent) {
          if (this.label === undefined && this.value === undefined) {
            localValue = this.trueValue;
          } else if (this.value !== undefined) {
            localValue = this.value;
          } else {
            localValue = this.label;
          }
        } else {
          if (this.label === undefined) {
            localValue = this.trueValue;
          } else {
            localValue = this.label;
          }
        }
        return localValue;
      }
    },
    watch: {
      value: function value(val) {
        this.setLocalValue(val);
      },
      checked: function checked() {
        this.setLocalValue();
      },
      parentValue: function parentValue() {
        this.setLocalValue();
      }
    },
    created: function created() {
      this.dispatch('bk-checkbox-group', 'checkbox-item-add', this);
      this.init();
    },
    methods: {
      getValue: function getValue() {
        if (this.selected) {
          return {
            isChecked: true,
            value: this.localTrueValue
          };
        } else {
          return {
            isChecked: false,
            value: this.falseValue
          };
        }
      },
      init: function init() {
        var parent = this.$parent;
        while (parent && !parent.isCheckboxGroup && !parent.$options.name !== 'bk-checkbox-group') {
          parent = parent.$parent;
        }
        this.parent = parent;
        this.setLocalValue();
      },
      setLocalValue: function setLocalValue(val) {
        if (val !== undefined) {
          this.localValue = val;
          return;
        }
        if (this.parent) {
          var trueValue = this.localTrueValue;
          var isSelected = this.parent.localValue.includes(trueValue);
          this.localValue = isSelected ? trueValue : this.falseValue;
        } else {
          if (this.checked !== undefined) {
            this.localValue = this.checked ? this.localTrueValue : this.falseValue;
          } else if (this.value === undefined) {
            this.localValue = this.falseValue;
          } else {
            this.localValue = this.value;
          }
        }
      },
      handleClick: function handleClick() {
        if (this.disabled) {
          return false;
        }
        var oldValue = this.localValue;
        var newValue;
        if (this.indeterminate) {
          newValue = this.localTrueValue;
        } else {
          newValue = oldValue === this.localTrueValue ? this.falseValue : this.localTrueValue;
        }
        this.localValue = newValue;
        this.$emit('input', newValue, this.localTrueValue);
        this.$emit('change', newValue, oldValue, this.localTrueValue);
        if (this.parent) {
          var groupValue = this.localTrueValue === undefined ? newValue : this.localTrueValue;
          this.parent.handleChange(this.selected, groupValue);
        }
      }
    }
  };

  /* script */
  var __vue_script__$1 = script$1;
  /* template */

  var __vue_render__$1 = function __vue_render__() {
    var _vm = this;

    var _h = _vm.$createElement;

    var _c = _vm._self._c || _h;

    return _c('label', {
      staticClass: "bk-form-checkbox",
      class: [{
        'is-disabled': _vm.disabled,
        'is-indeterminate': _vm.indeterminate,
        'is-checked': _vm.selected
      }, _vm.extCls],
      on: {
        "click": _vm.handleClick,
        "keydown": function keydown($event) {
          if (!('button' in $event) && _vm._k($event.keyCode, "enter", 13, $event.key, "Enter")) {
            return null;
          }

          $event.preventDefault();
          return _vm.handleClick($event);
        }
      }
    }, [_c('span', {
      staticClass: "bk-checkbox",
      attrs: {
        "tabindex": _vm.disabled ? false : 0
      }
    }), _c('input', {
      attrs: {
        "type": "hidden",
        "name": _vm.name
      },
      domProps: {
        "value": _vm.label === undefined ? _vm.localValue : _vm.label
      }
    }), _vm.$slots.default ? _c('span', {
      staticClass: "bk-checkbox-text"
    }, [_vm._t("default")], 2) : _vm._e()]);
  };

  var __vue_staticRenderFns__$1 = [];
  /* style */

  var __vue_inject_styles__$1 = undefined;
  /* scoped */

  var __vue_scope_id__$1 = undefined;
  /* module identifier */

  var __vue_module_identifier__$1 = undefined;
  /* functional template */

  var __vue_is_functional_template__$1 = false;
  /* style inject */

  /* style inject SSR */

  /* style inject shadow dom */

  var __vue_component__$1 = normalizeComponent_1({
    render: __vue_render__$1,
    staticRenderFns: __vue_staticRenderFns__$1
  }, __vue_inject_styles__$1, __vue_script__$1, __vue_scope_id__$1, __vue_is_functional_template__$1, __vue_module_identifier__$1, false, undefined, undefined, undefined);

  setInstaller(__vue_component__$1);

  var script$2 = {
    name: 'bk-button',
    props: {
      theme: {
        type: String,
        default: 'default',
        validator: function validator(value) {
          if (['default', 'primary', 'warning', 'success', 'danger'].indexOf(value) < 0) {
            console.error("theme property is not valid: '".concat(value, "'"));
            return false;
          }
          return true;
        }
      },
      hoverTheme: {
        type: String,
        default: '',
        validator: function validator(value) {
          if (['', 'primary', 'warning', 'success', 'danger'].indexOf(value) < 0) {
            console.error("hoverTheme property is not valid: '".concat(value, "'"));
            return false;
          }
          return true;
        }
      },
      size: {
        type: String,
        default: 'normal',
        validator: function validator(value) {
          if (['small', 'normal', 'large'].indexOf(value) < 0) {
            console.error("size property is not valid: '".concat(value, "'"));
            return false;
          }
          return true;
        }
      },
      title: {
        type: String,
        default: ''
      },
      icon: String,
      iconRight: String,
      disabled: Boolean,
      loading: Boolean,
      outline: Boolean,
      text: Boolean,
      nativeType: {
        type: String,
        default: 'button'
      },
      extCls: {
        type: String,
        default: ''
      }
    },
    data: function data() {
      return {
        showSlot: true
      };
    },
    computed: {
      iconType: function iconType() {
        var icon = this.icon || '';
        if (icon) {
          if (icon.indexOf('icon') === 0) {
            icon = icon.replace(/^(icon-)/, '');
          }
        }
        return icon;
      },
      iconRightType: function iconRightType() {
        var iconRight = this.iconRight || '';
        if (iconRight) {
          if (iconRight.indexOf('icon') === 0) {
            iconRight = iconRight.replace(/^(icon-)/, '');
          }
        }
        return iconRight;
      },
      themeType: function themeType() {
        if (this.text) {
          return 'primary';
        }
        return this.theme;
      },
      buttonCls: function buttonCls() {
        return ["bk-".concat(this.themeType), "bk-button-".concat(this.size), this.hoverTheme ? "bk-button-hover bk-".concat(this.hoverTheme) : this.text ? 'bk-button-text' : 'bk-button', this.disabled ? 'is-disabled' : '', this.loading ? 'is-loading' : '', this.outline ? 'is-outline' : '', !this.showSlot ? 'no-slot' : ''];
      }
    },
    mounted: function mounted() {
      this.showSlot = this.$slots.default !== undefined;
    },
    methods: {
      handleClick: function handleClick(e) {
        if (!this.disabled && !this.loading) {
          this.$emit('click', e);
          this.$el.blur();
        }
      }
    }
  };

  /* script */
  var __vue_script__$2 = script$2;
  /* template */

  var __vue_render__$2 = function __vue_render__() {
    var _vm = this;

    var _h = _vm.$createElement;

    var _c = _vm._self._c || _h;

    return _c('button', _vm._b({
      class: [_vm.buttonCls, _vm.extCls],
      attrs: {
        "title": _vm.title,
        "disabled": _vm.disabled,
        "type": _vm.nativeType
      },
      on: {
        "click": _vm.handleClick
      }
    }, 'button', _vm.$attrs, false), [_vm.loading ? _c('div', {
      staticClass: "bk-button-loading"
    }, [_c('div', {
      staticClass: "bounce1"
    }), _c('div', {
      staticClass: "bounce2"
    }), _c('div', {
      staticClass: "bounce3"
    }), _c('div', {
      staticClass: "bounce4"
    })]) : _vm._e(), _c('div', {
      class: _vm.loading ? 'bk-loading-wrapper' : ''
    }, [_vm.iconType ? _c('i', {
      staticClass: "bk-icon left-icon",
      class: ['icon-' + _vm.iconType, _vm.iconType === 'loading' ? 'bk-button-icon-loading' : '']
    }, [_vm.iconType === 'loading' ? [_c('span', {
      staticClass: "loading"
    })] : _vm._e()], 2) : _vm._e(), _c('span', [_vm._t("default")], 2), _vm.iconRightType ? _c('i', {
      staticClass: "bk-icon right-icon",
      class: ['icon-' + _vm.iconRightType, _vm.iconRightType === 'loading' ? 'bk-button-icon-loading' : '']
    }, [_vm.iconRightType === 'loading' ? [_c('span', {
      staticClass: "loading"
    })] : _vm._e()], 2) : _vm._e()])]);
  };

  var __vue_staticRenderFns__$2 = [];
  /* style */

  var __vue_inject_styles__$2 = undefined;
  /* scoped */

  var __vue_scope_id__$2 = undefined;
  /* module identifier */

  var __vue_module_identifier__$2 = undefined;
  /* functional template */

  var __vue_is_functional_template__$2 = false;
  /* style inject */

  /* style inject SSR */

  /* style inject shadow dom */

  var __vue_component__$2 = normalizeComponent_1({
    render: __vue_render__$2,
    staticRenderFns: __vue_staticRenderFns__$2
  }, __vue_inject_styles__$2, __vue_script__$2, __vue_scope_id__$2, __vue_is_functional_template__$2, __vue_module_identifier__$2, false, undefined, undefined, undefined);

  setInstaller(__vue_component__$2);

  var script$3 = {
    name: 'bk-table-setting-content',
    components: {
      bkCheckboxGroup: __vue_component__,
      bkCheckbox: __vue_component__$1,
      bkButton: __vue_component__$2
    },
    mixins: [locale.mixin],
    props: {
      fields: {
        type: Array,
        default: function _default() {
          return [];
        }
      },
      selected: {
        type: Array,
        default: function _default() {
          return [];
        }
      },
      valueKey: {
        type: String,
        default: 'id'
      },
      labelKey: {
        type: String,
        default: 'label'
      },
      size: {
        type: String,
        default: 'small'
      },
      limit: Number
    },
    data: function data() {
      return {
        localSelected: [],
        currentSize: 'small'
      };
    },
    computed: {
      fieldsState: function fieldsState() {
        var _this = this;
        var disabled = [];
        var available = [];
        var fixed = [];
        this.fields.forEach(function (field) {
          if (field.disabled) {
            disabled.push(field);
            if (_this.localSelected.includes(field[_this.valueKey])) {
              fixed.push(field);
            }
          } else {
            available.push(field);
          }
        });
        return {
          disabled: disabled,
          available: available,
          fixed: fixed
        };
      },
      disabledFields: function disabledFields() {
        return this.fieldsState.disabled;
      },
      availableFields: function availableFields() {
        return this.fieldsState.available;
      },
      fixedFields: function fixedFields() {
        return this.fieldsState.fixed;
      },
      allSelected: function allSelected() {
        var _this2 = this;
        return this.availableFields.every(function (field) {
          return _this2.localSelected.includes(field[_this2.valueKey]);
        });
      },
      reachLimit: function reachLimit() {
        return this.limit && this.localSelected.length > this.limit;
      },
      popoverInstance: function popoverInstance() {
        return this.$parent.instance;
      }
    },
    watch: {
      selected: {
        immediate: true,
        handler: function handler(value) {
          this.setSelected();
        }
      },
      size: {
        immediate: true,
        handler: function handler(size) {
          this.setSize(size);
        }
      },
      popoverInstance: function popoverInstance() {
        this.initCallback();
      }
    },
    methods: {
      initCallback: function initCallback() {
        var _this3 = this;
        this.popoverInstance.set({
          onHidden: function onHidden() {
            if (_this3.isConfirm) {
              _this3.$emit('setting-change', {
                fields: _this3.fields.filter(function (field) {
                  return _this3.localSelected.includes(field[_this3.valueKey]);
                }),
                size: _this3.currentSize
              });
            } else {
              _this3.$emit('cancel');
            }
            _this3.isConfirm = false;
            _this3.$nextTick(function () {
              _this3.setSelected();
              _this3.setSize(_this3.size);
            });
          }
        });
      },
      setSelected: function setSelected() {
        var _this4 = this;
        this.localSelected = this.selected.map(function (field) {
          return field[_this4.valueKey];
        });
      },
      setSize: function setSize(size) {
        this.currentSize = size;
      },
      handleSelectAll: function handleSelectAll() {
        var _this5 = this;
        if (!this.allSelected) {
          this.localSelected = this.fields.filter(function (field) {
            return _this5.fixedFields.includes(field) || !field.disabled;
          }).map(function (field) {
            return field[_this5.valueKey];
          });
        } else {
          this.localSelected = this.fixedFields.map(function (field) {
            return field[_this5.valueKey];
          });
        }
      },
      handleConfirm: function handleConfirm() {
        this.isConfirm = true;
        this.popoverInstance.hide();
      },
      handleCancel: function handleCancel() {
        this.isConfirm = false;
        this.popoverInstance.hide();
      }
    }
  };

  /* script */
  var __vue_script__$3 = script$3;
  /* template */

  var __vue_render__$3 = function __vue_render__() {
    var _vm = this;

    var _h = _vm.$createElement;

    var _c = _vm._self._c || _h;

    return _c('div', {
      staticClass: "bk-table-setting-content"
    }, [_c('h2', {
      staticClass: "content-title"
    }, [_vm._v(_vm._s(_vm.t('bk.table.setting.title')))]), _c('div', {
      staticClass: "content-scroller"
    }, [_c('div', {
      staticClass: "content-fields clearfix"
    }, [_c('p', {
      staticClass: "setting-title"
    }, [_vm._v("\n                " + _vm._s(_vm.t('bk.table.setting.fields.title')) + "\n                "), _vm.limit ? _c('span', {
      staticClass: "setting-subtitle",
      class: {
        'is-limit': _vm.reachLimit
      }
    }, [_vm._v("\n                    " + _vm._s(_vm.t('bk.table.setting.fields.subtitle', {
      max: _vm.limit
    })) + "\n                ")]) : _c('bk-checkbox', {
      staticClass: "fr setting-checkbox",
      attrs: {
        "checked": _vm.allSelected
      },
      nativeOn: {
        "click": function click($event) {
          return _vm.handleSelectAll($event);
        }
      }
    }, [_vm._v("\n                    " + _vm._s(_vm.t('bk.table.setting.fields.selectAll')) + "\n                ")])], 1), _c('bk-checkbox-group', {
      staticClass: "fields-group",
      model: {
        value: _vm.localSelected,
        callback: function callback($$v) {
          _vm.localSelected = $$v;
        },
        expression: "localSelected"
      }
    }, [_vm._l(_vm.fields, function (field) {
      return [_c('span', {
        key: field[_vm.valueKey],
        staticClass: "fields-checkbox-wrapper"
      }, [_c('bk-checkbox', {
        staticClass: "fields-checkbox",
        attrs: {
          "disabled": field.hasOwnProperty('disabled') ? !!field.disabled : false,
          "value": field[_vm.valueKey],
          "title": field[_vm.labelKey]
        }
      }, [_vm._v("\n                            " + _vm._s(field[_vm.labelKey]) + "\n                        ")])], 1)];
    })], 2)], 1), _c('div', {
      staticClass: "content-line-height"
    }, [_c('p', {
      staticClass: "setting-title"
    }, [_vm._v("\n                " + _vm._s(_vm.t('bk.table.setting.lineHeight.title')) + "\n            ")]), _c('div', {
      staticClass: "bk-button-group link-button-group"
    }, [_c('bk-button', {
      class: ['link-button', {
        'is-selected': _vm.currentSize === 'small'
      }],
      attrs: {
        "size": "small"
      },
      on: {
        "click": function click($event) {
          _vm.setSize('small');
        }
      }
    }, [_vm._v("\n                    " + _vm._s(_vm.t('bk.table.setting.lineHeight.small')) + "\n                ")]), _c('bk-button', {
      class: ['link-button', {
        'is-selected': _vm.currentSize === 'medium'
      }],
      attrs: {
        "size": "small"
      },
      on: {
        "click": function click($event) {
          _vm.setSize('medium');
        }
      }
    }, [_vm._v("\n                    " + _vm._s(_vm.t('bk.table.setting.lineHeight.medium')) + "\n                ")]), _c('bk-button', {
      class: ['link-button', {
        'is-selected': _vm.currentSize === 'large'
      }],
      attrs: {
        "size": "small"
      },
      on: {
        "click": function click($event) {
          _vm.setSize('large');
        }
      }
    }, [_vm._v("\n                    " + _vm._s(_vm.t('bk.table.setting.lineHeight.large')) + "\n                ")])], 1)])]), _c('div', {
      staticClass: "content-options"
    }, [_c('bk-button', {
      staticClass: "mr10",
      attrs: {
        "theme": "primary",
        "disabled": _vm.reachLimit
      },
      on: {
        "click": _vm.handleConfirm
      }
    }, [_vm._v("\n            " + _vm._s(_vm.t('bk.table.setting.options.ok')) + "\n        ")]), _c('bk-button', {
      attrs: {
        "theme": "default"
      },
      on: {
        "click": _vm.handleCancel
      }
    }, [_vm._v(_vm._s(_vm.t('bk.table.setting.options.cancel')))])], 1)]);
  };

  var __vue_staticRenderFns__$3 = [];
  /* style */

  var __vue_inject_styles__$3 = undefined;
  /* scoped */

  var __vue_scope_id__$3 = undefined;
  /* module identifier */

  var __vue_module_identifier__$3 = undefined;
  /* functional template */

  var __vue_is_functional_template__$3 = false;
  /* style inject */

  /* style inject SSR */

  /* style inject shadow dom */

  var __vue_component__$3 = normalizeComponent_1({
    render: __vue_render__$3,
    staticRenderFns: __vue_staticRenderFns__$3
  }, __vue_inject_styles__$3, __vue_script__$3, __vue_scope_id__$3, __vue_is_functional_template__$3, __vue_module_identifier__$3, false, undefined, undefined, undefined);

  setInstaller(__vue_component__$3);

  exports.default = __vue_component__$3;

  Object.defineProperty(exports, '__esModule', { value: true });

}));
